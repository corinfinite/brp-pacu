Version 2.1.1 12/27/2009
   Open window with error message when Jack does not initialize (instead of quitting silently)

Version 2.1.0 04/17/2009
   Changed libraries for thread mutexes for compilation on windows

   Smaller screen sizes now supported

   Octave based (log2) frequency grids instead of log10

   Auto-resize (ctrl-r) works much more predictably and smoothly

   Delay size has been increased to 1000millisecs

   Averaging (graph response time) and smoothing now adjustable via GUI

   Other minor glitches fixed

Version 2.0.8(unreleased) 04/06/2009
   Added Pink Noise Menu Item and CTRL-P accel
   
   Changed N to N_FFT to avoid symbol collisions
   
   Major Performance improvement, more than halved needed CPU cycles in gui
      *Changed smoothing algorithm in gui.c to not calculate millions of points redundantly
Version 2.0.7 04/01/2009
   Buffer Management
      *Added capability to automatically save the capture buffers and load them
      from $HOME/.BRP_PACU/buff_store at startup if it exists
      *Added Open, Save, and Save-As dialogs, functionality to store buffers
      for later usage/reference
      *Added functionality for opening data files by double-clicking or dragging
      into the application icon (Mac only)
   HCI 
      *Put more user friendly name onto Transfer Function Button (formerly
      H(z)
      *Changed Buffer names to not start at 0, but 1, updated accelerators
      accordingly 
      *Removed menu pictures because they hid the accelerator shortcut help in
      the menus for some reason
   Keyboard Accelerators
      *Thanks to Andreas for fixing the Mac key accelerators and suggesting the
      use of Control keys instead of Alt keys
   Minor Memory Leaks
      *Destroy widgets on exit only if left open
   Premature Memory Deallocation errors
      * Made colors global variables in gui.c
      * Made several widgets global variables
   Fix Jack callback stability by improving threadlock handling  
      *Removed threadlocking around gui_idle_func (Gui Idle function) which keeps jack audio thread from updating buffers
      *This improves jack performance (XRuns) by preventing Jack audio buffer callback from being locked out for long periods during a gui callback
      *This is done by only copying critical memory areas during the thread lockout, rather than trying to update the whole gui and not make a copy, which was easier to do but not clean
Version 2.0.6 02/01/2009
   Thanks to Andreas Schwab for fix to Makefile.am to detect gtk and noticing that
   the Jack callback Fill_buffer had no return value
Version 2.0.6 01/10/2009
   *Apply patch created by J Walton, aka tehgooroo so that it will compile using Macports
   under Mac OS-X.  Thanks J!

   *Fix minor problem in the impulse response algorithm caused by delay fix.

01/05/2009
   Fix bug in delay introduced by another bug fix.

01/04/2009
   Fix minor install error with gui.glade
   Starts jack transport automatically

12/31/2008
   Fix Jack call back to avoid mutex collisions

Version 2.0.0 12/31/2008
   Pink Noise and Jack Support

   Added Pink Noise Output

      *Mute/Unmute and adjust levels
   
   Add Jack Audio Connection Kit support and removed alsa
   
      *Automatically connects Reference and Measured to Channel 2 and Channel 1
   
      *Automatically connects Pink Noise Output to Reference Input

   Removed header install as part of installation (This was an accidental feature in previous
   versions, sorry)

12/20/2008
   Major GUI and UI update!

   *Delay function now resets delay before each capture, resulting in a much
      more intuitive delay finding procedure.

   *Rewrote buffer capture interface so that it makes more sense and works
      consistently.

   *Rewrote keyboard shortcuts so they don't interfere with the Avg gain.

   *Added default zoom button to return to original zoom settings.

   *Added inserted delay size status on the status bar.

   *Added "about" and "general help" windows

   *TODO: add pink noise generator and ability to save buffers to a file.
      This will allow soundcards with only one input channel to do the transfer
      function.

11/26/2008
   Fixed compilation erors with latest version of gtkkdatabox library.
   Certain API calls were removed or changed.  This update allows
   compatibility with the latest version.
02/22/2008
   Fixed delay dialog units.  Fixed delay algorithm bug.
   Fixed Broken automake links in tarball (Thanks to Dan for pointing them
   out).
02/04/2008
   Added "LED" signal indicators for audio inputs.  Changed soundcard buffer
   handling to prevent oops messages.
   Fixed various minor UI issues such as delay dialog problems.
01/28/2008
   Changed the thread sound read and the fft function to fix likely
   buffer over/underflows.  
01/28/2008
   Changed Smoothing function to work properly.  This feature was broken in an
   unreleased version by an upgrade to gtkdatabox-0.8.2.2
